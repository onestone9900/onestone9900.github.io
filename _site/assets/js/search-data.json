{"0": {
    "doc": "GradlePlugin",
    "title": "Spring Boot Gradle Plugin Reference Guide",
    "content": "Andy Wilkinson, Scott Frederick Version 2.7.12 . ",
    "url": "/docs/2.7.12/gradle_plugin/0.%20gradle_plugin/#spring-boot-gradle-plugin-reference-guide",
    
    "relUrl": "/docs/2.7.12/gradle_plugin/0.%20gradle_plugin/#spring-boot-gradle-plugin-reference-guide"
  },"1": {
    "doc": "GradlePlugin",
    "title": "GradlePlugin",
    "content": " ",
    "url": "/docs/2.7.12/gradle_plugin/0.%20gradle_plugin/",
    
    "relUrl": "/docs/2.7.12/gradle_plugin/0.%20gradle_plugin/"
  },"2": {
    "doc": "SpringBoot",
    "title": "Spring Boot Reference Documentation",
    "content": "Phillip Webb, Dave Syer, Josh Long, Stéphane Nicoll, Rob Winch, Andy Wilkinson, Marcel Overdijk, Christian Dupuis, Sébastien Deleuze, Michael Simons, Vedran Pavić, Jay Bryant, Madhura Bhave, Eddú Meléndez, Scott Frederick, Moritz Halbritter Version 2.7.12 . ",
    "url": "/docs/2.7.12/spring_boot/0.%20spring_boot/#spring-boot-reference-documentation",
    
    "relUrl": "/docs/2.7.12/spring_boot/0.%20spring_boot/#spring-boot-reference-documentation"
  },"3": {
    "doc": "SpringBoot",
    "title": "SpringBoot",
    "content": " ",
    "url": "/docs/2.7.12/spring_boot/0.%20spring_boot/",
    
    "relUrl": "/docs/2.7.12/spring_boot/0.%20spring_boot/"
  },"4": {
    "doc": "1. Introduction",
    "title": "1. Introduction",
    "content": "그레이들(Gradle)은 스프링 부트 지원을 위해 스프링 부트 그레이들 플러그인을 제공한다. 이를 통해 실행 가능한 jar 또는 war 압축파일을 패키징하고, 스프링 부트 애플리케이션을 실행하며,spring-boot-dependencies가 제공하는 의존성 관리를 사용할 수 있다. 스프링 부트의 그레이들 플러그인에는 그레이들 6.8, 6.9, 7.x 또는 8.x가 필요하며 그레이들 구성 캐시를 사용할 수 있다. 이 사용 설명서 외에, API 문서도 제공한다. ",
    "url": "/docs/2.7.12/gradle_plugin/1.%20introduction/",
    
    "relUrl": "/docs/2.7.12/gradle_plugin/1.%20introduction/"
  },"5": {
    "doc": "1. Legal",
    "title": "Legal",
    "content": "Copyright © 2012-2023 . Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically. ",
    "url": "/docs/2.7.12/spring_boot/1.%20legal/#legal",
    
    "relUrl": "/docs/2.7.12/spring_boot/1.%20legal/#legal"
  },"6": {
    "doc": "1. Legal",
    "title": "1. Legal",
    "content": " ",
    "url": "/docs/2.7.12/spring_boot/1.%20legal/",
    
    "relUrl": "/docs/2.7.12/spring_boot/1.%20legal/"
  },"7": {
    "doc": "2. Getting Help",
    "title": "Getting Help",
    "content": "If you have trouble with Spring Boot, we would like to help. Try the How-to documents. They provide solutions to the most common questions. Learn the Spring basics. Spring Boot builds on many other Spring projects. Check the spring.io web-site for a wealth of reference documentation. If you are starting out with Spring, try one of the guides. Ask a question. We monitor stackoverflow.com for questions tagged with spring-boot. Report bugs with Spring Boot at github.com/spring-projects/spring-boot/issues. All of Spring Boot is open source, including the documentation. If you find problems with the docs or if you want to improve them, please get involved. ",
    "url": "/docs/2.7.12/spring_boot/2.%20getting-help/#getting-help",
    
    "relUrl": "/docs/2.7.12/spring_boot/2.%20getting-help/#getting-help"
  },"8": {
    "doc": "2. Getting Help",
    "title": "2. Getting Help",
    "content": " ",
    "url": "/docs/2.7.12/spring_boot/2.%20getting-help/",
    
    "relUrl": "/docs/2.7.12/spring_boot/2.%20getting-help/"
  },"9": {
    "doc": "2. Getting Started",
    "title": "2. Getting Started",
    "content": "프로젝트에 플러그인을 적용해보자. 플러그인은 그레이들 플러그인 포털에 게시되며 plugins 블록을 사용하여 적용할 수 있다: . Groovy . plugins { id 'org.springframework.boot' version '2.7.12' } . Kotlin . plugins { id(\"org.springframework.boot\") version \"2.7.12\" } . 별도 플러그인은 프로젝트를 거의 변경하지 않는다. 그러나, 특정 플러그인이 적용될 때는 감지하고 반응한다. 예를 들어, java 플러그인이 적용되면 실행 가능한 jar(executable jar)를 빌드(build)하는 작업이 자동으로 구성된다. 일반적인 스프링 부트 프로젝트는 groovy, java 또는 org.jetbrains.kotlin.jvm 플러그인을 최소한으로 적용하고 의존성 관리를 위해 io.spring.dependency-management 플러그인 또는 그레이들의 기본 bom 지원도 사용한다. 코드 예시: . Groovy . plugins { id 'java' id 'org.springframework.boot' version '2.7.12' } apply plugin: 'io.spring.dependency-management' . Kotlin . plugins { java id(\"org.springframework.boot\") version \"2.7.12\" } apply(plugin = \"io.spring.dependency-management\") . 다른 플러그인이 적용될 때 스프링 부트 플러그인이 어떻게 작동하는지 자세히 알아보려면 Reacting to Other Plugins섹션 을 참고해보자. ",
    "url": "/docs/2.7.12/gradle_plugin/2.%20getting_started/",
    
    "relUrl": "/docs/2.7.12/gradle_plugin/2.%20getting_started/"
  },"10": {
    "doc": "3. Managing Dependencies",
    "title": "3. Managing Dependencies",
    "content": "스프링 부트 애플리케이션에서 의존성을 관리하려면, io.spring.dependency-management 플러그인을 적용하거나 그레이들의 기본 bom 지원을 사용할 수 있다. 전자의 주요 이점은 프로퍼티 기반의 맞춤 관리 버전을 제공하는 반면, 후자를 사용하면 빌드 속도가 빨라질 가능성이 높다. ",
    "url": "/docs/2.7.12/gradle_plugin/3.%20managing_dependencies/",
    
    "relUrl": "/docs/2.7.12/gradle_plugin/3.%20managing_dependencies/"
  },"11": {
    "doc": "3. Managing Dependencies",
    "title": "3.1. Managing Dependencies with the Dependency Management Plugin",
    "content": "io.spring.dependency-management 플러그인을 적용하면 스프링 부트 플러그인이 자동으로 사용 중인 스프링 부트 버전에서 spring-boot-dependencies bom을 가져온다. 이는 메이븐(Maven) 사용자가 즐겨 사용하는 방식과 유사한 의존성 관리 경험을 제공한다. 예를 들어, bom에서 관리되는 의존성을 선언할 때 버전을 생략할 수 있다. 이 기능을 사용하려면, 의존성을 선언하고 버전은 생략하면 된다: . Groovy . dependencies { implementation('org.springframework.boot:spring-boot-starter-web') implementation('org.springframework.boot:spring-boot-starter-data-jpa') } . Kotlin . dependencies { implementation(\"org.springframework.boot:spring-boot-starter-web\") implementation(\"org.springframework.boot:spring-boot-starter-data-jpa\") } . 3.1.1. Customizing Managed Versions . The spring-boot-dependencies bom that is automatically imported when the dependency management plugin is applied uses properties to control the versions of the dependencies that it manages. Browse the Dependency versions Appendix in the Spring Boot reference for a complete list of these properties. To customize a managed version you set its corresponding property. For example, to customize the version of SLF4J which is controlled by the slf4j.version property: . Groovy . ext['slf4j.version'] = '1.7.20' . Kotlin . extra[\"slf4j.version\"] = \"1.7.20\" . 각 스프링 부트 릴리스는 서드-파티 라이브러리 의존성에 대한 설계 및 테스트를 했다. 버전을 재정의하면 호환성 문제가 발생할 수 있으므로 주의해야 한다. ",
    "url": "/docs/2.7.12/gradle_plugin/3.%20managing_dependencies/#31-managing-dependencies-with-the-dependency-management-plugin",
    
    "relUrl": "/docs/2.7.12/gradle_plugin/3.%20managing_dependencies/#31-managing-dependencies-with-the-dependency-management-plugin"
  },"12": {
    "doc": "2.7.12",
    "title": "2.7.12",
    "content": ". | spring-boot-reference | spring-boot-gradle-plugin-reference | . ",
    "url": "/docs/2.7.12/",
    
    "relUrl": "/docs/2.7.12/"
  },"13": {
    "doc": "용어사전",
    "title": "용어사전",
    "content": ". | 플러그인 명칭은 영문 그대로 표기한다. | Spring Boot 스프링 부트 | Gradle 그레이들 | Plugin 플러그인 | Archives 압축파일 | Package 패키지 | Applications 애플리케이션 | Executable jar 실행 가능한 jar | Build 빌드 | Dependency 의존성 | Property 프로퍼티 | Maven 메이븐 | . ",
    "url": "/docs/grossary/",
    
    "relUrl": "/docs/grossary/"
  },"14": {
    "doc": "onestone",
    "title": "onestone",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  }
}
